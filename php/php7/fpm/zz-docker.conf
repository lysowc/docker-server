[global]
;后台执行fpm,默认值为yes，如果为了调试可以改为no。在FPM中，可以使用不同的设置来运行多个进程池。 这些设置可以针对每个进程池单独设置。
daemonize = no

[www]
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
php_flag[display_errors] = off
php_admin_value[error_log] = /var/log/php/error.log
php_admin_flag[log_errors] = on
php_admin_value[memory_limit] = 500M
;启动进程用户
user = sora
;启动进程群组
group = sora
;监听用户
listen.owner = sora
;监听用户
listen.group = sora
;读写文件权限
listen.mode = 0660
;fpm监听端口，即nginx中php处理的地址，一般默认值即可。可用格式为: 'ip:port', 'port', '/path/to/unix/socket'. 每个进程池都需要设置.
listen = 9002
;backlog数，-1表示无限制，由操作系统决定，此行注释掉就行。
listen.backlog = -1
;如何控制子进程
; ondemand  有请求的时候创建  默认 pm.start_servers
; dynamic 动态配置
;   pm.start_servers 启动时的进程数
;   pm.max_children 子进程最大数
;   pm.min_spare_servers ;，保证空闲进程数最小值，如果空闲进程小于此值，则创建新的子进程
;   pm.max_spare_servers ;，保证空闲进程数最大值，如果空闲进程大于此值，此进行清理
; static 静态 永远保持 pm.max_children 个进程
pm = dynamic
;启动时的进程数
pm.start_servers = 5
;保证空闲进程数最小值，如果空闲进程小于此值，则创建新的子进程
pm.min_spare_servers=5
;保证空闲进程数最大值，如果空闲进程大于此值，此进行清理
pm.max_spare_servers=10
;子进程最大数
pm.max_children = 50
;设置每个子进程重生之前服务的请求数.
;对于可能存在内存泄漏的第三方模块来说是非常有用的. 如果设置为 '0' 则一直接受请求. 等同于 PHP_FCGI_MAX_REQUESTS 环境变量. 默认值: 0.
pm.max_requests = 1000
;FPM状态页面的网址. 如果没有设置, 则无法访问状态页面. 默认值: none. munin监控会使用到
pm.status_path = /status
;FPM监控页面的ping网址. 如果没有设置, 则无法访问ping页面. 该页面用于外部检测FPM是否存活并且可以响应请求. 请注意必须以斜线开头 (/)。
ping.path = /ping
;用于定义ping请求的返回相应. 返回为 HTTP 200 的 text/plain 格式文本. 默认值: pong.
ping.response = pong
;慢请求的记录日志,配合request_slowlog_timeout使用
slowlog = /var/log/php/slow.log
;设置单个请求的超时中止时间. 该选项可能会对 php.ini 设置中的 max_execution_time 因为某些特殊原因没有中止运行的脚本有用.
;设置为 '0' 表示 'Off'.当经常出现502错误时可以尝试更改此选项。
request_terminate_timeout = 600
;当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中. 设置为 '0' 表示 'Off'
request_slowlog_timeout = 1s
;设置文件打开描述符的rlimit限制. 默认值: 系统定义值默认可打开句柄是1024，可使用 ulimit -n查看，ulimit -n 2048修改。
;rlimit_files = 1024
;设置核心rlimit最大限制值. 可用值: 'unlimited' 、0或者正整数. 默认值: 系统定义值.
;rlimit_core = 0
;启动时的Chroot目录. 所定义的目录需要是绝对路径. 如果没有设置, 则chroot不被使用.
;chroot = /usr/share/nginx/html
;设置启动目录，启动时会自动Chdir到该目录. 所定义的目录需要是绝对路径. 默认值: 当前目录，或者/目录（chroot时）
;chdir = /usr/share/nginx/html
;重定向运行过程中的stdout和stderr到主要的错误日志文件中.
;如果没有设置, stdout 和 stderr 将会根据FastCGI的规则被重定向到 /dev/null . 默认值: 空.
catch_workers_output = yes
;请求的记录日志格式
access.format = "%R - %u %t \"%m %r\" %s"
;请求的记录日志
access.log = /var/log/php/access.log

